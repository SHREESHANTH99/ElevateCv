import React from "react";import { Link, useLocation, useNavigate } from "react-router-dom";import { useAuth } from "../contexts/AuthContext";import {  FileText,  Target,  Mail,  BarChart3,  User,  Menu,  LogIn,  LogOut,} from "lucide-react";const Navbar: React.FC = () => {  const location = useLocation();  const navigate = useNavigate();  const [isMenuOpen, setIsMenuOpen] = React.useState(false);  const { user, logout } = useAuth();  const handleLogout = async () => {    try {      await logout();      navigate('/login');    } catch (error) {      console.error('Failed to log out', error);    }  };  const navItems = [    { path: "/dashboard", icon: BarChart3, label: "Dashboard" },    { path: "/resume/builder", icon: FileText, label: "Resume Builder" },    { path: "/job-matcher", icon: Target, label: "Job Matcher" },    { path: "/cover-letter", icon: Mail, label: "Cover Letter" },    { path: "/templates", icon: FileText, label: "Templates" },    { path: "/profile", icon: User, label: "Profile" },  ];  return (    <nav className="bg-white shadow-lg border-b border-gray-200">      <div className="max-w-full mx-auto px-4 sm:px-6 lg:px-8">        <div className="flex justify-between items-center h-16">          <Link to="/dashboard" className="flex items-center space-x-2">            <div className="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">              <FileText className="w-5 h-5 text-white" />            </div>            <span className="text-xl font-bold text-gray-900">ResumeAI</span>          </Link>          <div className="hidden md:flex items-center space-x-8">            {navItems.map(({ path, icon: Icon, label }) => (              <Link                key={path}                to={path}                className={`flex items-center space-x-1 px-3 py-2 rounded-md text-sm font-medium transition-colors ${                  location.pathname === path                    ? "text-blue-600 bg-blue-50"                    : "text-gray-600 hover:text-gray-900 hover:bg-gray-50"                }`}              >                <Icon className="w-4 h-4" />                <span>{label}</span>              </Link>            ))}          </div>          <div className="flex items-center space-x-4">            {!user ? (              <Link                to="/login"                className="hidden md:flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"              >                <LogIn className="w-4 h-4" />                <span className="text-sm font-medium">Login</span>              </Link>            ) : (              <div className="flex items-center space-x-2">                <Link                  to="/profile"                  className="hidden md:flex items-center space-x-2 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors"                >                  <User className="w-4 h-4" />                  <span>Profile</span>                </Link>                <button                  onClick={handleLogout}                  className="hidden md:flex items-center space-x-2 bg-gray-100 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-200 transition-colors"                >                  <LogOut className="w-4 h-4" />                  <span className="text-sm font-medium">Logout</span>                </button>              </div>            )}            <div className="relative">              <button className="flex items-center space-x-1 p-2 rounded-md hover:bg-gray-50">                <User className="w-5 h-5 text-gray-600" />              </button>            </div>            <button              className="md:hidden p-2 rounded-md hover:bg-gray-50"              onClick={() => setIsMenuOpen(!isMenuOpen)}            >              <Menu className="w-5 h-5 text-gray-600" />            </button>          </div>        </div>        {isMenuOpen && (          <div className="md:hidden py-4 border-t border-gray-200">            {navItems.map(({ path, icon: Icon, label }) => (              <Link                key={path}                to={path}                className={`flex items-center space-x-2 px-4 py-2 text-sm font-medium ${                  location.pathname === path                    ? "text-blue-600 bg-blue-50"                    : "text-gray-600 hover:text-gray-900"                }`}                onClick={() => setIsMenuOpen(false)}              >                <Icon className="w-4 h-4" />                <span>{label}</span>              </Link>            ))}            {!user ? (              <Link                to="/login"                className="flex items-center space-x-2 px-4 py-2 text-sm font-medium text-blue-600 bg-blue-50"                onClick={() => setIsMenuOpen(false)}              >                <LogIn className="w-4 h-4" />                <span>Login</span>              </Link>            ) : (              <button                onClick={() => {                  handleLogout();                  setIsMenuOpen(false);                }}                className="flex items-center space-x-2 px-4 py-2 text-sm font-medium text-red-600 bg-red-50"              >                <LogOut className="w-4 h-4" />                <span>Logout</span>              </button>            )}          </div>        )}      </div>    </nav>  );};export default Navbar;