const admin = require("firebase-admin");const initializeFirebaseAdmin = () => {  if (admin.apps.length === 0) {    try {      if (process.env.FIREBASE_SERVICE_ACCOUNT_KEY) {        const serviceAccount = JSON.parse(          process.env.FIREBASE_SERVICE_ACCOUNT_KEY        );        admin.initializeApp({          credential: admin.credential.cert(serviceAccount),          projectId: process.env.FIREBASE_PROJECT_ID,        });      } else {        console.log("Using default Firebase credentials");        admin.initializeApp({          projectId: process.env.FIREBASE_PROJECT_ID,        });      }      console.log("Firebase Admin initialized successfully");    } catch (error) {      console.error("Failed to initialize Firebase Admin:", error);      throw error;    }  }  return admin;};const verifyFirebaseToken = async (idToken) => {  try {    const decodedToken = await admin.auth().verifyIdToken(idToken);    return decodedToken;  } catch (error) {    console.error("Error verifying Firebase token:", error);    throw new Error("Invalid Firebase token");  }};const getFirebaseUser = async (uid) => {  try {    const userRecord = await admin.auth().getUser(uid);    return userRecord;  } catch (error) {    console.error("Error fetching Firebase user:", error);    throw new Error("User not found");  }};module.exports = {  initializeFirebaseAdmin,  verifyFirebaseToken,  getFirebaseUser,  admin,};